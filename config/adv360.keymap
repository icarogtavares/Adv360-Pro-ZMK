#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define KP_LAYER        1
#define FN_LAYER        2
#define MOD_LAYER       3
#define BACKSPACE_LAYER 4

/ {
    behaviors {
      #include "macros.dtsi"

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
      td_backspace: tap_dance_backspace {
          compatible = "zmk,behavior-tap-dance";
          label = "TAP_DANCE_BACKSPACE";
          #binding-cells = <0>;
          tapping-term-ms = <200>;
          bindings = <&lt BACKSPACE_LAYER BSPC>, <&kp BSPC>;
      };
    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp EQUAL   &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &tog KP_LAYER                                                                &mo MOD_LAYER   &kp N6 &kp N7 &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp TAB     &kp Q     &kp W    &kp E    &kp R      &kp T  &none                                                                        &kp INS         &kp Y  &kp U  &kp I     &kp O    &kp P    &kp BSLH
        &kp ESC     &kp A     &kp S    &kp D    &kp F      &kp G  &none                       &kp LCTRL &kp LALT &kp LGUI  &kp RCTRL           &kp PRINTSCREEN &kp H  &kp J  &kp K     &kp L    &kp SEMI &kp SQT
        &kp LSHFT   &kp Z     &kp X    &kp C    &kp V      &kp B                                        &kp HOME &kp PG_UP                                     &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
        &mo FN_LAYER  &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT                     &td_backspace &kp DEL   &kp END  &kp PG_DN &kp ENTER &kp SPACE                        &kp UP &kp DOWN  &kp LBKT &kp RBKT &mo FN_LAYER
      >;
    };
    keypad {
      bindings = <
        &kp EQUAL     &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &trans                                                           &mo MOD_LAYER &kp N6 &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp MINUS
        &kp TAB       &kp Q     &kp W    &kp E    &kp R      &kp T  &none                                                            &none         &kp Y  &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &kp BSLH
        &kp ESC       &kp A     &kp S    &kp D    &kp F      &kp G  &none           &kp LCTRL &kp LALT &kp LGUI  &kp RCTRL           &none         &kp H  &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &kp SQT
        &kp LSHFT     &kp Z     &kp X    &kp C    &kp V      &kp B                            &kp HOME &kp PG_UP                                   &kp N  &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &kp RSHFT
        &mo FN_LAYER  &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT                  &trans &kp DEL   &kp END  &kp PG_DN &kp ENTER &kp KP_N0                      &kp UP     &kp DOWN     &kp KP_DOT    &kp RBKT        &mo FN_LAYER
      >;
    };
    fn {
      bindings = <
        &kp F1     &kp F2 &kp F3 &kp F4 &kp F5 &kp F6  &tog KP_LAYER                                          &mo MOD_LAYER &kp F7 &kp F8          &kp F9            &kp F10 &kp F11           &kp F12
        &trans     &trans &trans &trans &trans &trans  &none                                                  &none         &trans &trans          &trans            &trans  &kp C_PLAY_PAUSE  &trans
        &trans     &trans &trans &trans &trans &trans  &none             &trans &trans &trans &trans          &none         &trans &trans          &trans            &trans  &trans            &trans
        &trans     &trans &trans &trans &trans &trans                           &trans &trans                               &trans &trans          &trans            &trans  &trans            &trans
        &trans     &trans &trans &trans &trans                    &trans &trans &trans &trans &trans &trans                        &kp C_VOLUME_UP &kp C_VOLUME_DOWN &trans  &trans            &trans
      >;
    };
    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                     &trans                 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &bootloader                                                               &bootloader            &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &none                   &none &none &bt BT_CLR &none                      &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none                                      &none &none                                                        &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none                                       &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none &none &none
      >;
    };
    backspace_layer {
      bindings = <
        &trans     &trans &trans &trans   &trans     &trans  &trans                                                   &trans &trans   &trans   &trans   &trans    &trans  &trans
        &trans     &trans &trans &kp LPAR &kp RPAR   &trans  &trans                                                   &trans &trans   &trans   &kp HOME &kp END   &trans  &trans
        &trans     &trans &trans &kp LBRC &kp RBRC   &trans  &trans              &trans &trans &trans &trans          &trans &kp LEFT &kp DOWN &kp UP   &kp RIGHT &trans  &trans
        &trans     &trans &trans &kp LBKT &kp RBKT   &trans                             &trans &trans                        &trans   &trans   &trans   &trans    &trans  &trans
        &trans     &trans &trans &trans   &trans                        &trans &trans &trans &trans &trans &trans                     &trans   &trans   &trans    &trans  &trans
      >;
    };
  };
};
